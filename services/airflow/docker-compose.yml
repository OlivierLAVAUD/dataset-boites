services:
  postgres:
    image: postgres:latest
    container_name: db_databox
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflowpassword
      POSTGRES_DB: airflow_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/databox.sql:/docker-entrypoint-initdb.d/databox.sql
    networks:
      - databox_network

  airflow:
    image: apache/airflow:2.3.0
    container_name: airflow_webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    ports:
      - "8080:8080"
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    networks:
      - databox_network
    depends_on:
      - postgres
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --firstname Admin --lastname User --email admin@example.com --role Admin --password adminpassword &&
        airflow webserver"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s



  airflow_scheduler:
    image: apache/airflow:2.3.0
    container_name: airflow_scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    networks:
      - databox_network
    restart: always
    depends_on:
      airflow:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: ["airflow", "scheduler"]
